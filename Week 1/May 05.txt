Problem Statement:

First Unique Character in a String

Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.

Note: You may assume the string contain only lowercase letters.

My solution:

class Solution {
    public int firstUniqChar(String s) {
        //int index=-1;
        Map<Character,Integer> fmap = new HashMap<Character,Integer>();
        for(int i = 0;i<s.length();i++){
            fmap.put(s.charAt(i),fmap.getOrDefault(s.charAt(i),0)+1);
        }
        for(int i = 0;i<s.length();i++){
            if(fmap.get(s.charAt(i)) == 1)
                return i;
        }
        
        return -1;
        
    }
}