Problem Statement:

Ransom Note

Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Example 1:

Input: ransomNote = "a", magazine = "b"
Output: false

Example 2:

Input: ransomNote = "aa", magazine = "ab"
Output: false

Example 3:

Input: ransomNote = "aa", magazine = "aab"
Output: true

Constraints:

You may assume that both strings contain only lowercase letters.

My solution:

class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        Map<Character,Integer> ransomMap = new HashMap();
        Map<Character,Integer> magMap = new HashMap();
        
        for(int i=0;i<ransomNote.length();i++){
            Character c = ransomNote.charAt(i);
            ransomMap.put(c,ransomMap.getOrDefault(c,0)+1);
        }
        
        for(int i=0;i<magazine.length();i++){
            Character c = magazine.charAt(i);
            magMap.put(c,magMap.getOrDefault(c,0)+1);
        }
        
        for(Map.Entry<Character,Integer> entry:ransomMap.entrySet()){
            Character key = entry.getKey();
            int value = entry.getValue();
            
            if(magMap.containsKey(key) && magMap.get(key) >=value){
                continue;
            }
            else{
                return false;
            }
        }
        
        return true;
    }
}