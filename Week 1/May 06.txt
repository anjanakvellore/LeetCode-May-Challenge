Problem Statement:

Majority Element

Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:
Input: [3,2,3]
Output: 3

Example 2:
Input: [2,2,1,1,1,2,2]
Output: 2

My solution:

class Solution {
    public int majorityElement(int[] nums) {
        Map<Integer,Integer> freqMap = new HashMap();
        for(int n:nums){
            freqMap.put(n,freqMap.getOrDefault(n,0)+1);
        }
        
        for(int key:freqMap.keySet()){
            if(freqMap.get(key)>nums.length/2){
                return key;
            }
        }
        
        return -1;
        
    }
}